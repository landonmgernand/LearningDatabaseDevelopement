//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFramework_Linq
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EduBase : DbContext
    {
        public EduBase()
            : base("name=EduBase")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Course> Course { get; set; }
        public virtual DbSet<SelectedCourse> SelectedCourse { get; set; }
        public virtual DbSet<SelectedCourseInfo> SelectedCourseInfo { get; set; }
    
        public virtual int usp_Insert_SelectedCourse(string studentNo, string courseNo, Nullable<bool> orderBook)
        {
            var studentNoParameter = studentNo != null ?
                new ObjectParameter("StudentNo", studentNo) :
                new ObjectParameter("StudentNo", typeof(string));
    
            var courseNoParameter = courseNo != null ?
                new ObjectParameter("CourseNo", courseNo) :
                new ObjectParameter("CourseNo", typeof(string));
    
            var orderBookParameter = orderBook.HasValue ?
                new ObjectParameter("OrderBook", orderBook) :
                new ObjectParameter("OrderBook", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_SelectedCourse", studentNoParameter, courseNoParameter, orderBookParameter);
        }
    
        public virtual int usp_Update_SelectedCourse(string studentNo, string courseNo, Nullable<bool> orderBook)
        {
            var studentNoParameter = studentNo != null ?
                new ObjectParameter("StudentNo", studentNo) :
                new ObjectParameter("StudentNo", typeof(string));
    
            var courseNoParameter = courseNo != null ?
                new ObjectParameter("CourseNo", courseNo) :
                new ObjectParameter("CourseNo", typeof(string));
    
            var orderBookParameter = orderBook.HasValue ?
                new ObjectParameter("OrderBook", orderBook) :
                new ObjectParameter("OrderBook", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Update_SelectedCourse", studentNoParameter, courseNoParameter, orderBookParameter);
        }
    }
}
